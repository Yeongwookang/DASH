<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="employee">
	<!-- login -->
	<select id="loginEmployee" parameterType="String" resultType="com.sp.app.employee.Employee">
		SELECT e.empNo, pwd, name, register_date, modify_date, last_login, posNo, depNo
		FROM employee e
		JOIN person_record pr ON e.empNo = pr.empNo
		WHERE e.empNo = #{empNo} AND enabled != 0
	</select>
	
	<!-- 마지막 로그인 업데이트 -->
	<update id="updateLastLogin" parameterType="String">
		UPDATE employee SET last_login = SYSDATE, failure_cnt = 0
		WHERE empNo = #{empNo}
	</update>
	
	<!-- 사원 등록 -->
	<insert id="insertEmployee" parameterType="com.sp.app.employee.Employee">
		INSERT INTO employee(empNo, pwd, name, thumbnail, birth, email, addr, tel, enabled, register_date, modify_date, failure_cnt, startDate) 
		VALUES (#{empNo}, #{pwd}, #{name}, #{thumbnail, jdbcType=VARCHAR}, #{birth}, #{email}, #{addr}, #{tel}, 1, SYSDATE, SYSDATE, 0, SYSDATE) 
    </insert>
	
	<!-- 권한 추가-->
    <insert id="insertAuthority" parameterType="com.sp.app.employee.Employee">
    	INSERT INTO employeeAuthority(empNo, authority)
    		VALUES(#{empNo}, #{authority})
    </insert>
    
    <!-- 권한 수정 -->
    <update id="updateAuthority" parameterType="com.sp.app.employee.Employee">
    	UPDATE employeeAuthority SET authority = #{authority} WHERE empNo = #{empNo}
    </update>
    
    <!-- 사원정보 조회 -->
    <select id="readEmployee" parameterType="String" resultType="com.sp.app.employee.Employee">
		SELECT e.empNo, name, pwd, thumbnail, TO_CHAR(birth, 'YYYY-MM-DD') birth, email, tel, addr, enabled, 
			failure_cnt, register_date, modify_date, last_login, pr.depNo, depName, pr.posNo, posName, pr.rankNo, rankName, pr.teamNo, teamName
		FROM employee e
		JOIN person_record pr ON e.empNo = pr.empNo
		JOIN department d ON pr.depNo = d.depNo
        JOIN position p ON pr.posNo = p.posNo
        JOIN rank r ON pr.rankNo = r.rankNo
        JOIN team t ON pr.teamNo = t.teamNo
		WHERE e.empNo = #{empNo} AND pr.state = 1
	</select>
	
	<!-- 사원정보 수정  --> 
    <update id="updateEmployeeEnabled" parameterType="map">
		UPDATE employee SET enabled=#{enabled} WHERE empNo=#{empNo}
    </update>
    
    <update id="updateEmployee1" parameterType="com.sp.app.employee.Employee">
		UPDATE employee SET pwd=#{pwd}, modify_date=SYSDATE
		WHERE empNo=#{empNo}
    </update>
    
    <update id="updateEmployee2" parameterType="com.sp.app.employee.Employee">
		UPDATE employee SET thumbnail=#{thumbnail, jdbcType=VARCHAR}, birth=#{birth, jdbcType=VARCHAR}, 
			tel=#{tel, jdbcType=VARCHAR}, email=#{email, jdbcType=VARCHAR}, 
			addr=#{addr, jdbcType=VARCHAR}
		WHERE empNo=#{empNo}
    </update>
    
    <!-- 사원정보 삭제  -->    
    <delete id="deleteEmployee" parameterType="String">
		DELETE FROM employee WHERE empNo=#{empNo}
    </delete>
    
    <!-- 패스워드 실패 / 사원 상태 -->
    <select id="checkFailureCount" parameterType="String" resultType="Integer">
    	SELECT NVL(failure_cnt, 0) failure_cnt
    	FROM employee
    	WHERE empNo=#{empNo}
    </select>
    
    <!-- ex. 5번 실패 후 로그인 했을 때 다시 0으로 -->
    <update id="updateFailureCountReset" parameterType="String">
    	UPDATE employee SET failure_cnt = 0
    	WHERE empNo=#{empNo}
    </update>
    
    <!-- 횟수 누적 -->
    <update id="updateFailureCount" parameterType="String">
    	UPDATE employee SET failure_cnt = failure_cnt + 1
    	WHERE empNo=#{empNo}
    </update>
    
    <!-- 사원 상태 -->
    <insert id="insertEmployeeState" parameterType="com.sp.app.employee.Employee">
    	INSERT INTO employeeState(num, empNo, stateCode, memo, registerEmpNo, reg_date)
    		VALUES(employeeState_seq.NEXTVAL, #{empNo}, #{stateCode}, 
    			#{memo}, #{registerEmpNo}, SYSDATE)
    </insert>
	
	
	<!-- 헤더 -->
	<select id="readMain" parameterType="String" resultType="com.sp.app.employee.Employee">
		SELECT e.empNo, e.name, e.email, p.depName
		FROM employee e
		JOIN person_record pr ON e.empNo = pr.empNo
		JOIN department p ON p.depNo = pr.depNo
		WHERE e.empNo = #{empNo} AND pr.state =  1
	</select>

</mapper>