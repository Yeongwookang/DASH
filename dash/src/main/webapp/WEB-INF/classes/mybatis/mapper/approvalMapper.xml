<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="approval">
	<sql id="where-list">
		<if test="condition=='dep'">
			INSTR(depName, #{keyword}) &gt;= 1
		</if>
		<if test="condition=='pos'">
			INSTR(posName, #{keyword}) &gt;= 1
		</if>
		<if test="condition=='name'">
			INSTR(name, #{keyword}) &gt;= 1
		</if>
		<if test="condition=='rank'">
			INSTR(rankName, #{keyword}) &gt;= 1
		</if>
		<if test="condition=='team'">
			INSTR(teamName, #{keyword}) &gt;= 1
		</if>
		<if test="condition=='empNo'">
			INSTR(e.empNo,#{keyword}) &gt;= 1
		</if>
		<if test="condition=='tlName'">
			INSTR(tlName,#{keyword}) &gt;= 1
		</if>
	</sql>
	
	<select id="approvalSeq" resultType="Long">
		SELECT e_document_SEQ.NEXTVAL FROM dual
	</select>
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0) FROM PERSON_RECORD pr 
		LEFT OUTER JOIN employee e ON pr.empNo=e.empNo
		LEFT OUTER JOIN DEPARTMENT d ON d.DEPNO = pr.DEPNO
		LEFT OUTER JOIN POSITION p ON p.POSNO = pr.POSNO
		LEFT OUTER JOIN team t ON t.teamNo = pr.teamNo
		LEFT OUTER JOIN rank r ON r.rankNo = pr.rankNo
		<where>
			state = 1 
			<if test="keyword !=null and keyword !=''">
				AND	<include refid="where-list"/>
			</if>
		</where>
	</select>
	
	<select id="dataCount_tl" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0) FROM timeline 
	</select>
	

	
	<update id ="insertApproval" parameterType="approval" >
		INSERT ALL 
			INTO e_document (signNum, title, content, empNo, formnum) 
			VALUES (#{signNum}, #{title}, #{content}, #{empNo}, 1)
			
			INTO doc_record (signNum, reg_date, state, max_state) 
			VALUES(#{signNum}, sysdate, 0, <choose><when test="refcnt!= null and refcnt!=''">#{refcnt}</when><otherwise>0</otherwise></choose>)
				
				<if test="ref1 !=null and ref1 !=''">
				INTO f_approval (signNum, state, empNo) 
				VALUES (#{signNum}, '대기', #{ref1})
				</if>
				<if test="ref2 !=null and ref2 !=''">
				INTO s_approval (signNum, state, empNo)
				VALUES (#{signNum}, '대기', #{ref2})
				</if>
				<if test="ref3 !=null and ref3 !=''">
				INTO t_approval (signNum, state, empNo)
				VALUES (#{signNum}, '대기', #{ref3})
				</if>
				<if test="tlNum != null and tlNum !=''">
				INTO timeline_record(recordNum, tlNum, signNum) 
				VALUES(timeline_record_seq.nextval, #{tlNum}, #{signNum})
				</if>
		SELECT * FROM dual
	</update>
	
	<update id="updateApproval" parameterType="map">
		UPDATE e_document
		SET title= #{title}, content= #{content}, empNo =#{empNo}, formNum=#{formNum}
		WHERE signNum = #{signNum}
	</update>
	
	<delete id="deleteReference" parameterType="map">
		DELETE
		(
		SELECT dr.signNum, f.empNo, s.empNo, t.empNo FROM doc_record dr
		LEFT OUTER JOIN f_approval f ON f.signNum= dr.signNum
		LEFT OUTER JOIN s_approval s ON s.signNum= dr.signNum
		LEFT OUTER JOIN t_approval t ON t.signNum= dr.signNum
		WHERE dr.signNum = #{signNum}
		)
	</delete>
	<update id="insertReference" parameterType="map">
		INSERT ALL 
			INTO doc_record (signNum, reg_date, state, max_state)
			VALUES (#{signNum}, sysdate, 0, <choose><when test="refcnt!= null and refcnt!=''">#{refcnt}</when><otherwise>0</otherwise></choose>)
			<if test="ref1 !=null and ref1 !=''">
			INTO f_approval (signNum, state, empNo) 
			VALUES (#{signNum}, '대기', #{ref1})
			</if>
			<if test="ref2 !=null and ref2 !=''">
			INTO s_approval (signNum, state, empNo)
			VALUES (#{signNum}, '대기', #{ref2})
			</if>
			<if test="ref3 !=null and ref3 !=''">
			INTO t_approval (signNum, state, empNo)
			VALUES (#{signNum}, '대기', #{ref3})
			</if>
		SELECT * FROM dual
	</update>
	
	<select id="readTimelineRecord" parameterType="Long" resultType="approval">
		SELECT recordNum, tlNum, signNum, state FROM timeline_record 
		WHERE signNum= #{signNum}	
	</select>
	
	<delete id="deleteTimelineRecord" parameterType="Long">
		DELETE FROM timeline_record WHERE signNum =#{signNum}
	</delete>
	
	<update id="updateTimelineRecord" parameterType="Long">
		UPDATE timeline_record 
		SET tlNum = #{tlNum}, state = #{state}
		WHERE signNum = #{signNum}
	</update>
	
	<delete id="deleteApproval" parameterType="Long">
		DELETE FROM e_document WHERE signNum =#{signNum}
	</delete>
	
	<select id="myApprovalCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)  FROM doc_record dr
		LEFT OUTER JOIN e_document e ON e.signNum = dr.signNum
		LEFT OUTER JOIN employee emp ON emp.empNo = e.empNo
		LEFT OUTER JOIN PERSON_RECORD pr ON pr.empNo = e.empNO AND pr.state=1
		LEFT OUTER JOIN position pos ON pos.posNo = pr.posNo
		LEFT OUTER JOIN rank ON rank.rankNo = pr.rankNo
		LEFT OUTER JOIN department dep ON dep.depNo = pr.depNo
		LEFT OUTER JOIN team ON team.teamNo = pr.posNo
		WHERE emp.empNo = #{empNo}
	</select>
	
	
	<select id="approvalList" parameterType="map" resultType="approval">
		SELECT dr.state, dr.max_state, depName, emp.name, emp.empNo, pr.state, title, rankName, e.signNum   FROM DOC_RECORD dr
		LEFT OUTER JOIN e_document e on e.signNum = dr.signNum
		LEFT OUTER JOIN f_approval f ON e.signNum = f.signNum
		LEFT OUTER JOIN employee emp ON emp.empNo = e.empNo
		LEFT OUTER JOIN PERSON_RECORD pr ON pr.empNo = e.empNO AND pr.state=1
		LEFT OUTER JOIN position pos ON pos.posNo = pr.posNo
		LEFT OUTER JOIN rank ON rank.rankNo = pr.rankNo
		LEFT OUTER JOIN department dep ON dep.depNo = pr.depNo
		LEFT OUTER JOIN team ON team.teamNo = pr.posNo
		WHERE dr.state &lt; max_state AND f.empNo = #{empNo} and dr.state = 0

        UNION ALL

        SELECT dr.state, dr.max_state, depName, emp.name, emp.empNo, pr.state, title, rankName, e.signNum    FROM DOC_RECORD dr
		LEFT OUTER JOIN e_document e on e.signNum = dr.signNum
		LEFT OUTER JOIN s_approval s ON e.signNum = s.signNum
		LEFT OUTER JOIN employee emp ON emp.empNo = e.empNo
		LEFT OUTER JOIN PERSON_RECORD pr ON pr.empNo = e.empNO AND pr.state=1
		LEFT OUTER JOIN position pos ON pos.posNo = pr.posNo
		LEFT OUTER JOIN rank ON rank.rankNo = pr.rankNo
		LEFT OUTER JOIN department dep ON dep.depNo = pr.depNo
		LEFT OUTER JOIN team ON team.teamNo = pr.posNo
		WHERE dr.state &lt; max_state AND s.empNo = #{empNo} and dr.state = 1

        UNION ALL

        SELECT dr.state, dr.max_state, depName, emp.name, emp.empNo, pr.state, title, rankName, e.signNum    FROM DOC_RECORD dr
		LEFT OUTER JOIN e_document e on e.signNum = dr.signNum
		LEFT OUTER JOIN t_approval t ON e.signNum = t.signNum
		LEFT OUTER JOIN employee emp ON emp.empNo = e.empNo
		LEFT OUTER JOIN PERSON_RECORD pr ON pr.empNo = e.empNO AND pr.state=1
		LEFT OUTER JOIN position pos ON pos.posNo = pr.posNo
		LEFT OUTER JOIN rank ON rank.rankNo = pr.rankNo
		LEFT OUTER JOIN department dep ON dep.depNo = pr.depNo
		LEFT OUTER JOIN team ON team.teamNo = pr.posNo
		WHERE dr.state &lt; max_state AND t.empNo = #{empNo} and dr.state = 2
	</select>
	
	<select id="myApprovalList" parameterType="map" resultType="approval">
		SELECT e.title, depName, rankName, emp.name, dr.state, to_char(dr.reg_date,'YYYY-MM-DD')reg_date, e.signNum, dr.state, max_state  FROM doc_record dr
		LEFT OUTER JOIN e_document e ON e.signNum = dr.signNum
		LEFT OUTER JOIN employee emp ON emp.empNo = e.empNo
		LEFT OUTER JOIN PERSON_RECORD pr ON pr.empNo = e.empNO AND pr.state=1
		LEFT OUTER JOIN position pos ON pos.posNo = pr.posNo
		LEFT OUTER JOIN rank ON rank.rankNo = pr.rankNo
		LEFT OUTER JOIN department dep ON dep.depNo = pr.depNo
		LEFT OUTER JOIN team ON team.teamNo = pr.posNo
		WHERE emp.empNo = #{empNo}
		ORDER BY dr.reg_date
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<select id="readApproval" parameterType="Long" resultType="approval">
		SELECT title, content, e.signNum, emp.empNo, depName, emp.name, f.empno as ref1, s.empno as ref2, t.empno as ref3, dr.state, max_state FROM e_document e
		LEFT OUTER JOIN doc_record dr ON dr.signNum = e.signNum
		LEFT OUTER JOIN f_approval f ON e.signNum = f.signNum
		LEFT OUTER JOIN s_approval s ON e.signNum = s.signNum
		LEFT OUTER JOIN t_approval t ON e.signNum = t.signNum
		LEFT OUTER JOIN employee emp ON emp.empNo = e.empNo
		LEFT OUTER JOIN PERSON_RECORD pr ON pr.empNo = e.empNO AND pr.state=1
		LEFT OUTER JOIN rank ON rank.rankNo = pr.rankNo
		LEFT OUTER JOIN position p ON p.posNo = pr.posNo
		LEFT OUTER JOIN department dep ON dep.depNo = pr.depNo
		LEFT OUTER JOIN team ON team.teamNo = pr.posNo
		WHERE e.signNum = #{signNum}
	</select>
	
	<select id="empList" parameterType="map" resultType="com.sp.app.employee.Employee">
		SELECT emp.empNo, depName, emp.name, teamName, posName, rankName FROM employee emp
		LEFT OUTER JOIN PERSON_RECORD pr ON pr.empNo = emp.empNo AND pr.state=1
		LEFT OUTER JOIN rank ON rank.rankNo = pr.rankNo
		LEFT OUTER JOIN position p ON p.posNo = pr.posNo
		LEFT OUTER JOIN department dep ON dep.depNo = pr.depNo
		LEFT OUTER JOIN team ON team.teamNo = pr.teamNo
		<where>
			<if test="keyword !=null and keyword !=''">
				<include refid="where-list"/>
			</if>
		</where>
		ORDER BY pr.depNo, pr.empNo DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	
	<update id="approveUpdate" parameterType="map">
		UPDATE 
		<choose>
			<when test="state == 0"> f_approval</when>
			<when test="state == 1"> s_approval</when>
			<when test="state == 2"> t_approval</when>
			<otherwise> dual</otherwise>
		</choose>
		SET reg_date = sysdate, state='승인' 
		WHERE signNum = #{signNum}
	</update>
	
	<update id="approve" parameterType="Long">
		UPDATE doc_record SET reg_date = sysdate, state = (SELECT state FROM doc_record 
		WHERE signNum = #{signNum})+1 WHERE signNum=#{signNum}
	</update>
	
	<insert id="insertFile" parameterType="approval">
		INSERT INTO e_documentFile(fileNum, signNum, saveFilename, originalFilename, fileSize)
		VALUES(e_documentFile_seq.nextval, #{signNum}, #{saveFilename}, #{originalFilename}, #{fileSize})
	</insert>
	
	<select id="fileList" parameterType="Long" resultType="approval" >
		SELECT fileNum, signNum, saveFilename, originalFilename, fileSize FROM e_documentFile WHERE signNum = #{signNum} 
	</select>
	
	<select id="readFile" parameterType="Long" resultType="approval">
		SELECT fileNum, signNum, saveFilename, originalFilename, fileSize
		FROM e_documentFile
	    WHERE fileNum = #{fileNum}      
	</select>
	
	<delete id="deleteFile" parameterType="Long">
		DELETE FROM e_documentFile WHERE fileNum = #{fileNum}
	</delete>
	
	<select id="countTimeline" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*),0) FROM timeline FROM timeline tl
		LEFT OUTER JOIN PERSON_RECORD pr ON pr.empNo = tl.empNo AND pr.state=1
		LEFT OUTER JOIN rank ON rank.rankNo = pr.rankNo
		LEFT OUTER JOIN position p ON p.posNo = pr.posNo
		LEFT OUTER JOIN department dep ON dep.depNo = pr.depNo
		LEFT OUTER JOIN team ON team.teamNo = pr.teamNo
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<select id="listTimeline" parameterType="map" resultType="approval">
		SELECT tlNum, tlName, tl.state, max_state, tl.empNo, e.name, TO_CHAR(tl.reg_date,'YYYY-MM-DD')reg_date FROM timeline tl
		LEFT OUTER JOIN employee e ON e.empNo = tl.empNo
		LEFT OUTER JOIN PERSON_RECORD pr ON pr.empNo = tl.empNo AND pr.state=1
		LEFT OUTER JOIN rank ON rank.rankNo = pr.rankNo
		LEFT OUTER JOIN position p ON p.posNo = pr.posNo
		LEFT OUTER JOIN department dep ON dep.depNo = pr.depNo
		LEFT OUTER JOIN team ON team.teamNo = pr.teamNo
		<where>
			<if test="keyword !=null and keyword !=''">
				<include refid="where-list"/>
			</if>
		</where>
		ORDER BY pr.posNo, tlNum DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<select id="readTimeline" parameterType="Long" resultType="approval">
		SELECT tlNum, tlName, tl.state, tl.max_state, tl.empNo, TO_CHAR(tl.reg_date,'YYYY-MM-DD')reg_date, e.name, tl.content FROM timeline tl
		LEFT OUTER JOIN employee e ON e.empNo = tl.empNo
		LEFT OUTER JOIN PERSON_RECORD pr ON pr.empNo = tl.empNo AND pr.state=1
		LEFT OUTER JOIN rank ON rank.rankNo = pr.rankNo
		LEFT OUTER JOIN position p ON p.posNo = pr.posNo
		LEFT OUTER JOIN department dep ON dep.depNo = pr.depNo
		LEFT OUTER JOIN team ON team.teamNo = pr.teamNo
		WHERE tlNum = #{tlNum}
	</select>
	
	<select id="recordTimeline" parameterType="approval" resultType="approval">
		SELECT * FROM timeline_record WHERE tlNum = #{tlNum}
	</select>
	
	<insert id="insertTimeline" parameterType="map">
		INSERT INTO timeline (tlNum, tlName, state, max_state, empNo, reg_date, content) 
		values(timeline_seq.nextval, #{tlName}, 0, #{max_state}, #{empNo}, sysdate, #{content})
	</insert>
	
	<update id="updateTimeline" parameterType="map">
		UPDATE timeline SET tlName= #{tlName}, state = #{state}, max_state=#{max_state}, reg_date = #{reg_date}, content=#{content}
		WHERE tlNum = #{tlNum}
	</update>
	
	<update id="updateTlAdmin" parameterType="map">
		UPDATE timeline SET empNo = #{empNo} WHERE tlNum = #{tlNum}
	</update>
	
	<delete id="deleteTimeline" parameterType="map">
		DELETE FROM timeline WHERE tlNum = #{tlNum}
	</delete>
	
	<select id="subDocumentList0" parameterType="Long" resultType="approval">
		SELECT recordNum, tlNum, tr.signNum, dr.state, dr.max_state, title FROM timeline_record tr
		JOIN e_document e ON e.signNum = tr.signNum
		JOIN doc_record dr ON dr.signNum = tr.signNum
		WHERE dr.state = 0 AND dr.state != dr.max_state AND tlNum = #{tlNum}
	</select>
	<select id="subDocumentList1" parameterType="Long" resultType="approval">
		SELECT recordNum, tlNum, tr.signNum, dr.state, dr.max_state, title FROM timeline_record tr
		JOIN e_document e ON e.signNum = tr.signNum
		JOIN doc_record dr ON dr.signNum = tr.signNum
		WHERE dr.state = 1 AND tlNum = #{tlNum}
	</select>
	<select id="subDocumentList2" parameterType="Long" resultType="approval">
		SELECT recordNum, tlNum, tr.signNum, dr.state, dr.max_state, title FROM timeline_record tr
		JOIN e_document e ON e.signNum = tr.signNum
		JOIN doc_record dr ON dr.signNum = tr.signNum
		WHERE dr.state = 2 AND tlNum = #{tlNum}
	</select>
	<select id="subDocumentList3" parameterType="Long" resultType="approval">
		SELECT recordNum, tlNum, tr.signNum, dr.state, dr.max_state, title FROM timeline_record tr
		JOIN e_document e ON e.signNum = tr.signNum
		JOIN doc_record dr ON dr.signNum = tr.signNum
		WHERE dr.state = dr.max_state AND tlNum = #{tlNum}
	</select>
	
</mapper>