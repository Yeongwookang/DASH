<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="develop">
	
	
	<select id="developList" parameterType="map" resultType="com.sp.app.develop.Develop">
		SELECT dr.state, dr.max_state, depName, emp.name, emp.empNo, pr.state, title, rankName, e.signNum   FROM DOC_RECORD dr
		LEFT OUTER JOIN e_document e on e.signNum = dr.signNum
		LEFT OUTER JOIN f_approval f ON e.signNum = f.signNum
		LEFT OUTER JOIN employee emp ON emp.empNo = e.empNo
		LEFT OUTER JOIN PERSON_RECORD pr ON pr.empNo = e.empNO AND pr.state=1
		LEFT OUTER JOIN position pos ON pos.posNo = pr.posNo
		LEFT OUTER JOIN rank ON rank.rankNo = pr.rankNo
		LEFT OUTER JOIN department dep ON dep.depNo = pr.depNo
		LEFT OUTER JOIN team ON team.teamNo = pr.posNo
		WHERE dr.state &lt; max_state AND f.empNo = #{empNo} and dr.state = 0

        UNION ALL

        SELECT dr.state, dr.max_state, depName, emp.name, emp.empNo, pr.state, title, rankName, e.signNum    FROM DOC_RECORD dr
		LEFT OUTER JOIN e_document e on e.signNum = dr.signNum
		LEFT OUTER JOIN s_approval s ON e.signNum = s.signNum
		LEFT OUTER JOIN employee emp ON emp.empNo = e.empNo
		LEFT OUTER JOIN PERSON_RECORD pr ON pr.empNo = e.empNO AND pr.state=1
		LEFT OUTER JOIN position pos ON pos.posNo = pr.posNo
		LEFT OUTER JOIN rank ON rank.rankNo = pr.rankNo
		LEFT OUTER JOIN department dep ON dep.depNo = pr.depNo
		LEFT OUTER JOIN team ON team.teamNo = pr.posNo
		WHERE dr.state &lt; max_state AND s.empNo = #{empNo} and dr.state = 1

        UNION ALL

        SELECT dr.state, dr.max_state, depName, emp.name, emp.empNo, pr.state, title, rankName, e.signNum    FROM DOC_RECORD dr
		LEFT OUTER JOIN e_document e on e.signNum = dr.signNum
		LEFT OUTER JOIN t_approval t ON e.signNum = t.signNum
		LEFT OUTER JOIN employee emp ON emp.empNo = e.empNo
		LEFT OUTER JOIN PERSON_RECORD pr ON pr.empNo = e.empNO AND pr.state=1
		LEFT OUTER JOIN position pos ON pos.posNo = pr.posNo
		LEFT OUTER JOIN rank ON rank.rankNo = pr.rankNo
		LEFT OUTER JOIN department dep ON dep.depNo = pr.depNo
		LEFT OUTER JOIN team ON team.teamNo = pr.posNo
		WHERE dr.state &lt; max_state AND t.empNo = #{empNo} and dr.state = 2
	</select>
	
	<select id="mydeptList" parameterType="map" resultType="com.sp.app.develop.Develop">
		SELECT e.title, depName, rankName, emp.name, dr.state, to_char(dr.reg_date,'YYYY-MM-DD')reg_date, e.signNum, dr.state, max_state  FROM doc_record dr
		LEFT OUTER JOIN e_document e ON e.signNum = dr.signNum
		LEFT OUTER JOIN employee emp ON emp.empNo = e.empNo
		LEFT OUTER JOIN PERSON_RECORD pr ON pr.empNo = e.empNO AND pr.state=1
		LEFT OUTER JOIN position pos ON pos.posNo = pr.posNo
		LEFT OUTER JOIN rank ON rank.rankNo = pr.rankNo
		LEFT OUTER JOIN department dep ON dep.depNo = pr.depNo
		LEFT OUTER JOIN team ON team.teamNo = pr.posNo
		WHERE dep.depNo = #{depNo}
		ORDER BY dr.reg_date
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<select id="readDevelop" parameterType="Long" resultType="com.sp.app.develop.Develop">
		SELECT title, content, e.signNum, emp.empNo, depName, emp.name, f.empno as ref1, s.empno as ref2, t.empno as ref3, dr.state, max_state FROM e_document e
		LEFT OUTER JOIN doc_record dr ON dr.signNum = e.signNum
		LEFT OUTER JOIN f_approval f ON e.signNum = f.signNum
		LEFT OUTER JOIN s_approval s ON e.signNum = s.signNum
		LEFT OUTER JOIN t_approval t ON e.signNum = t.signNum
		LEFT OUTER JOIN employee emp ON emp.empNo = e.empNo
		LEFT OUTER JOIN PERSON_RECORD pr ON pr.empNo = e.empNO AND pr.state=1
		LEFT OUTER JOIN rank ON rank.rankNo = pr.rankNo
		LEFT OUTER JOIN position p ON p.posNo = pr.posNo
		LEFT OUTER JOIN department dep ON dep.depNo = pr.depNo
		LEFT OUTER JOIN team ON team.teamNo = pr.posNo
		WHERE e.signNum = #{signNum}
	</select>
	
	
	<update id="approveUpdate" parameterType="map">
		UPDATE SET reg_date = sysdate, state='승인' FROM 
		<choose>
			<when test="state == 0"> f_approval</when>
			<when test="state == 1"> s_approval</when>
			<when test="state == 2"> t_approval</when>
			<otherwise> dual</otherwise>
		</choose>
		
		WHERE signNum = #{signNum}
	</update>
	
	
	<update id="approve" parameterType="Long">
		UPDATE doc_record SET reg_date = sysdate, state = (SELECT state FROM doc_record WHERE signNum = #{signNum})+1 WHERE signNum=#{signNum}
	</update>
	
	
</mapper>